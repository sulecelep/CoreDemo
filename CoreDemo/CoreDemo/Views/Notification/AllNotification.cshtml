@using EntityLayer.Concrete
@model List<Notification>
@{
    ViewData["Title"] = "AllNotification";
    Layout = "~/Views/Shared/WriterLayout.cshtml";
    int count = 0;

}

<h1>Bildirimler</h1>
<table class="table table-bordered me-lg-5">
    <tr>
        <th>#</th>
        <th>Bildirimler</th>
        <th>Tarih</th>
    </tr>
    @foreach(var item in Model)
    {
        count++;
        <tr>
            <td>@count</td>
            <td>@item.NotificationDetails</td>
@*            <td>@item.NotificationDate.ToShortDateString()</td>
*@            <td>
                @{
                    
                    DateTime now = DateTime.Now;
                    int year = (DateTime.Now.Year - item.NotificationDate.Year);
                    TimeSpan ts = now - item.NotificationDate;
                    double days = Math.Abs(ts.Days);
                    int hours = Math.Abs(ts.Hours);
                    int min = Math.Abs(ts.Minutes);
                    if (days == 0)
                    {
                        if (hours == 0)
                        {
                            @(ts.Minutes.ToString()+ " dakika önce")
                        }
                        else
                        {
                            @(ts.Hours.ToString() +" saat önce")
                        }
                    }
                    if(days>0 && days<30)
                    {
                        @(ts.Days.ToString()+ " gün önce")

                    }
                    if (days >= 30 && year==0)
                    {

                        var months = Math.Round(days / 30);
                        
                        @(months + " ay önce")
                    }
                    if(year>0)
                    {
                        @(year + " yıl önce")
                    }
                }
            </td>
           @* @if ((DateTime.Now).Subtract(item.NotificationDate).Hours >= 1 )
            {
                var differenceHour = DateTime.Now.Subtract(item.NotificationDate).Hours;
                differenceInterval = differenceHour + "saat";
                <td>yaklaşık @differenceInterval</td>
            }
            @if ((DateTime.Now).Subtract(item.NotificationDate).Minutes < 60 && (DateTime.Now).Subtract(item.NotificationDate).Hours < 1)
            {
                var differenceMinute = DateTime.Now.Subtract(item.NotificationDate).Minutes;
                differenceInterval = differenceMinute + "m";
                <td>yaklaşık @differenceInterval</td>
            }
            @if ((DateTime.Now).Subtract(item.NotificationDate).Seconds >= 0 && (DateTime.Now).Subtract(item.NotificationDate).Seconds < 60 && (DateTime.Now).Subtract(item.NotificationDate).Minutes < 1)
            {
                var differenceSecond = DateTime.Now.Subtract(item.NotificationDate).Seconds;
                differenceInterval = differenceSecond + "s";
                <td>yaklaşık @differenceInterval</td>
            }*@
            
        </tr>
    }
</table>

